{"ast":null,"code":"import ProductCard from \"../components/ProductCard.vue\";\nimport ThePagination from \"../components/ThePagination.vue\";\nimport TheFiltration from \"../components/TheFiltration.vue\";\nexport default {\n  components: {\n    TheFiltration,\n    ProductCard,\n    ThePagination\n  },\n\n  data() {\n    return {\n      products: [],\n      totalRecords: 0,\n      productsPerPage: 8,\n      filters: {\n        tag: {\n          type: \"checkbox\",\n          apiName: \"tagName\",\n          options: [],\n          selected: []\n        },\n        categories: {\n          type: \"checkbox\",\n          apiName: \"categories\",\n          appName: 'Kategorie',\n          options: [],\n          selected: []\n        } //sort: 0,\n\n      }\n    };\n  },\n\n  methods: {\n    async loadProducts(page) {\n      try {\n        const searchParams = new URLSearchParams({\n          _limit: this.productsPerPage,\n          _page: page\n        });\n        /*this.filters.tag.content.forEach((element) => {\r\n          searchParams.append(\"tagName\", element);\r\n        });\r\n          this.filters.categories.content.forEach((element) => {\r\n          searchParams.append(\"category\", element);\r\n        });*/\n        // foreach(key, value) key=tag, value = { type:...,apiName:..., conten:...}\n\n        Object.entries(this.filters).forEach(([, value]) => {\n          value.content.forEach(element => {\n            searchParams.append(value.apiName, element);\n          });\n        });\n        const response = await fetch(\"http://localhost:3000/products?\" + new URLSearchParams({\n          _limit: this.productsPerPage,\n          _page: page,\n          _tag: this.filters.tag\n        }));\n        const data = await response.json();\n        this.products = data;\n        this.totalRecords = response.headers.get(\"X-Total-Count\");\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    updateContent(page) {\n      this.loadProducts(page);\n    }\n\n  },\n\n  mounted() {\n    this.loadProducts(1);\n  }\n\n};","map":{"version":3,"mappings":"AAuBA,OAAOA,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,eAAe;EACbC,UAAU,EAAE;IACVD,aADU;IAEVF,WAFU;IAGVC;EAHU,CADC;;EAMbG,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,CAHZ;MAILC,OAAO,EAAE;QACPC,GAAG,EAAE;UACHC,IAAI,EAAE,UADH;UAEHC,OAAO,EAAE,SAFN;UAGHC,OAAO,EAAE,EAHN;UAIHC,QAAQ,EAAE;QAJP,CADE;QAOPC,UAAU,EAAE;UACVJ,IAAI,EAAE,UADI;UAEVC,OAAO,EAAE,YAFC;UAGVI,OAAO,EAAE,WAHC;UAIVH,OAAO,EAAE,EAJC;UAKVC,QAAQ,EAAE;QALA,CAPL,CAcP;;MAdO;IAJJ,CAAP;EAqBD,CA5BY;;EA6BbG,OAAO,EAAE;IACP,MAAMC,YAAN,CAAmBC,IAAnB,EAAyB;MACvB,IAAI;QACF,MAAMC,YAAW,GAAI,IAAIC,eAAJ,CAAoB;UACvCC,MAAM,EAAE,KAAKd,eAD0B;UAEvCe,KAAK,EAAEJ;QAFgC,CAApB,CAArB;QAKA;;;;;;QAQA;;QACAK,MAAM,CAACC,OAAP,CAAe,KAAKhB,OAApB,EAA6BiB,OAA7B,CAAqC,CAAC,GAAGC,KAAH,CAAD,KAAe;UAClDA,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAuBG,OAAD,IAAa;YACjCT,YAAY,CAACU,MAAb,CAAoBH,KAAK,CAACf,OAA1B,EAAmCiB,OAAnC;UACD,CAFD;QAGD,CAJD;QAMA,MAAME,QAAO,GAAI,MAAMC,KAAK,CAC1B,oCACE,IAAIX,eAAJ,CAAoB;UAClBC,MAAM,EAAE,KAAKd,eADK;UAElBe,KAAK,EAAEJ,IAFW;UAGlBc,IAAI,EAAE,KAAKxB,OAAL,CAAaC;QAHD,CAApB,CAFwB,CAA5B;QAQA,MAAML,IAAG,GAAI,MAAM0B,QAAQ,CAACG,IAAT,EAAnB;QACA,KAAK5B,QAAL,GAAgBD,IAAhB;QAEA,KAAKE,YAAL,GAAoBwB,QAAQ,CAACI,OAAT,CAAiBC,GAAjB,CAAqB,eAArB,CAApB;MACF,CAjCA,CAiCE,OAAOC,CAAP,EAAU;QACVC,OAAO,CAACC,KAAR,CAAcF,CAAd;MACF;IACD,CAtCM;;IAuCPG,aAAa,CAACrB,IAAD,EAAO;MAClB,KAAKD,YAAL,CAAkBC,IAAlB;IACD;;EAzCM,CA7BI;;EAwEbsB,OAAO,GAAG;IACR,KAAKvB,YAAL,CAAkB,CAAlB;EACD;;AA1EY,CAAf","names":["ProductCard","ThePagination","TheFiltration","components","data","products","totalRecords","productsPerPage","filters","tag","type","apiName","options","selected","categories","appName","methods","loadProducts","page","searchParams","URLSearchParams","_limit","_page","Object","entries","forEach","value","content","element","append","response","fetch","_tag","json","headers","get","e","console","error","updateContent","mounted"],"sourceRoot":"","sources":["D:\\OneDrive\\IdeaProjects\\app\\src\\views\\StorePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <section class=\"filtrovani\">\r\n    </section>\r\n      <TheFiltration/>\r\n    <section class=\"row productSection\">\r\n      <h2>Nabídka vybraných produktů</h2>\r\n      <ProductCard\r\n        v-for=\"product in products\"\r\n        :key=\"product.id\"\r\n        :product=\"product\"\r\n      />\r\n    </section>\r\n\r\n    <ThePagination\r\n      :totalRecords=\"totalRecords\"\r\n      :perPage=\"productsPerPage\"\r\n      @pageChanged=\"updateContent\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductCard from \"../components/ProductCard.vue\";\r\nimport ThePagination from \"../components/ThePagination.vue\";\r\nimport TheFiltration from \"../components/TheFiltration.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TheFiltration,\r\n    ProductCard,\r\n    ThePagination,\r\n  },\r\n  data() {\r\n    return {\r\n      products: [],\r\n      totalRecords: 0,\r\n      productsPerPage: 8,\r\n      filters: {\r\n        tag: {\r\n          type: \"checkbox\",\r\n          apiName: \"tagName\",\r\n          options: [],\r\n          selected: [],\r\n        },\r\n        categories: {\r\n          type: \"checkbox\",\r\n          apiName: \"categories\",\r\n          appName: 'Kategorie',\r\n          options: [],\r\n          selected: [],\r\n        },\r\n        //sort: 0,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async loadProducts(page) {\r\n      try {\r\n        const searchParams = new URLSearchParams({\r\n          _limit: this.productsPerPage,\r\n          _page: page,\r\n        });\r\n\r\n        /*this.filters.tag.content.forEach((element) => {\r\n          searchParams.append(\"tagName\", element);\r\n        });\r\n\r\n        this.filters.categories.content.forEach((element) => {\r\n          searchParams.append(\"category\", element);\r\n        });*/\r\n\r\n        // foreach(key, value) key=tag, value = { type:...,apiName:..., conten:...}\r\n        Object.entries(this.filters).forEach(([, value]) => {\r\n          value.content.forEach((element) => {\r\n            searchParams.append(value.apiName, element);\r\n          });\r\n        });\r\n\r\n        const response = await fetch(\r\n          \"http://localhost:3000/products?\" +\r\n            new URLSearchParams({\r\n              _limit: this.productsPerPage,\r\n              _page: page,\r\n              _tag: this.filters.tag,\r\n            })\r\n        );\r\n        const data = await response.json();\r\n        this.products = data;\r\n\r\n        this.totalRecords = response.headers.get(\"X-Total-Count\");\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n    updateContent(page) {\r\n      this.loadProducts(page);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadProducts(1);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.productSection h2 {\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n}\r\n.productSection {\r\n  min-height: 500px;\r\n}\r\n.filtrovani {\r\n  background-color: #e0e0e0;\r\n  display: block;\r\n  padding-bottom: 35px;\r\n  margin-bottom: 35px;\r\n  float: left;\r\n  margin-right: 15px;\r\n  padding-top: 20px;\r\n}\r\n.filtraceGroup {\r\n  margin-left: 0.5rem;\r\n  padding-right: 5rem;\r\n}\r\n.filtraceGroup label {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.sloupec {\r\n  margin-left: 5%;\r\n}\r\n.filtraceGroup {\r\n  width: 115%;\r\n}\r\n.filtrationColumns input[type=\"submit\"] {\r\n  display: table;\r\n  margin: auto;\r\n  margin-top: 15px;\r\n}\r\n@media only screen and (max-width: 990px) {\r\n  .filtrovani {\r\n    float: none;\r\n    margin-right: 0;\r\n  }\r\n  .sloupec {\r\n    margin: 0;\r\n    margin-right: 2rem;\r\n    float: left;\r\n  }\r\n  .filtrationColumns {\r\n    display: flex;\r\n    justify-content: space-around;\r\n  }\r\n  .filtraceGroup {\r\n    margin: 0;\r\n    padding: 0;\r\n    padding-left: 1rem;\r\n  }\r\n  .inputContainer {\r\n    margin-top: 25px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}