{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"filtrovani\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"row productSection\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Nabídka vybraných produktů\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TheFiltration = _resolveComponent(\"TheFiltration\");\n\n  const _component_ProductCard = _resolveComponent(\"ProductCard\");\n\n  const _component_ThePagination = _resolveComponent(\"ThePagination\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_TheFiltration, {\n    filters: $data.filters\n  }, null, 8\n  /* PROPS */\n  , [\"filters\"]), _createElementVNode(\"section\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createBlock(_component_ProductCard, {\n      key: product.id,\n      product: product\n    }, null, 8\n    /* PROPS */\n    , [\"product\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createVNode(_component_ThePagination, {\n    totalRecords: $data.totalRecords,\n    perPage: $data.productsPerPage,\n    onPageChanged: $options.updateContent\n  }, null, 8\n  /* PROPS */\n  , [\"totalRecords\", \"perPage\", \"onPageChanged\"])]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBACU,SADV,EACU;EADDC,KAAK,EAAC;AACL,CADV,EAA2B,IAA3B,EAA2B;AAAA;AAA3B;;;EAGSA,KAAK,EAAC;;;gCACbD,oBAAmC,IAAnC,EAAmC,IAAnC,EAAI,4BAAJ,EAA8B;AAAA;AAA9B;;;;;;;;;uBALJE,oBAkBM,KAlBN,EAkBM,IAlBN,EAkBM,CAjBJC,UAiBI,EAfFC,aAAmCC,wBAAnC,EAAmC;IAAnBC,OAAO,EAAEC;EAAU,CAAnC,EAAgC,IAAhC,EAAgC;EAAA;EAAhC,EAAgC,WAAhC,CAeE,EAdJP,oBAOU,SAPV,cAOU,CANRQ,UAMQ,qBALRN,oBAIEO,SAJF,EAIE,IAJF,EAIEC,YAHkBH,cAGlB,EAHOI,OAAmB,IAAZ;yBADhBC,aAIEC,sBAJF,EAIE;MAFCC,GAAG,EAAEH,OAAO,CAACI,EAEd;MADCJ,OAAO,EAAEA;IACV,CAJF;;IAAA;GAIE,CAJF;;EAAA,CAKQ,EAPV,CAcI,EALJP,aAIEY,wBAJF,EAIE;IAHCC,YAAY,EAAEV,kBAGf;IAFCW,OAAO,EAAEX,qBAEV;IADCY,aAAW,EAAEC;EACd,CAJF;;EAAA,+CAKI,CAlBN","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_TheFiltration","filters","$data","_hoisted_3","_Fragment","_renderList","product","_createBlock","_component_ProductCard","key","id","_component_ThePagination","totalRecords","perPage","onPageChanged","$options"],"sourceRoot":"","sources":["D:\\OneDrive\\IdeaProjects\\app\\src\\views\\StorePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <section class=\"filtrovani\">\r\n    </section>\r\n      <TheFiltration :filters=\"filters\"/>\r\n    <section class=\"row productSection\">\r\n      <h2>Nabídka vybraných produktů</h2>\r\n      <ProductCard\r\n        v-for=\"product in products\"\r\n        :key=\"product.id\"\r\n        :product=\"product\"\r\n      />\r\n    </section>\r\n\r\n    <ThePagination\r\n      :totalRecords=\"totalRecords\"\r\n      :perPage=\"productsPerPage\"\r\n      @pageChanged=\"updateContent\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductCard from \"../components/ProductCard.vue\";\r\nimport ThePagination from \"../components/ThePagination.vue\";\r\nimport TheFiltration from \"../components/TheFiltration.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TheFiltration,\r\n    ProductCard,\r\n    ThePagination,\r\n  },\r\n  data() {\r\n    return {\r\n      products: [],\r\n      totalRecords: 0,\r\n      productsPerPage: 8,\r\n      filters: {\r\n        tag: {\r\n          type: \"checkbox\",\r\n          apiName: \"tagName\",\r\n          content: []\r\n        },\r\n        categories: {\r\n          type: \"checkbox\",\r\n          apiName: \"categories\",\r\n          content: []\r\n        },\r\n        //sort: 0,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async loadProducts(page) {\r\n      try {\r\n        const searchParams = new URLSearchParams({\r\n          _limit: this.productsPerPage,\r\n          _page: page,\r\n        });\r\n\r\n        /*this.filters.tag.content.forEach((element) => {\r\n          searchParams.append(\"tagName\", element);\r\n        });\r\n\r\n        this.filters.categories.content.forEach((element) => {\r\n          searchParams.append(\"category\", element);\r\n        });*/\r\n\r\n        // foreach(key, value) key=tag, value = { type:...,apiName:..., conten:...}\r\n        Object.entries(this.filters).forEach(([, value]) => {\r\n          value.content.forEach((element) => {\r\n            searchParams.append(value.apiName, element);\r\n          });\r\n        });\r\n\r\n        const response = await fetch(\r\n          \"http://localhost:3000/products?\" +\r\n            new URLSearchParams({\r\n              _limit: this.productsPerPage,\r\n              _page: page,\r\n              _tag: this.filters.tag,\r\n            })\r\n        );\r\n        const data = await response.json();\r\n        this.products = data;\r\n\r\n        this.totalRecords = response.headers.get(\"X-Total-Count\");\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n    updateContent(page) {\r\n      this.loadProducts(page);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadProducts(1);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.productSection h2 {\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n}\r\n.productSection {\r\n  min-height: 500px;\r\n}\r\n.filtrovani {\r\n  background-color: #e0e0e0;\r\n  display: block;\r\n  padding-bottom: 35px;\r\n  margin-bottom: 35px;\r\n  float: left;\r\n  margin-right: 15px;\r\n  padding-top: 20px;\r\n}\r\n.filtraceGroup {\r\n  margin-left: 0.5rem;\r\n  padding-right: 5rem;\r\n}\r\n.filtraceGroup label {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.sloupec {\r\n  margin-left: 5%;\r\n}\r\n.filtraceGroup {\r\n  width: 115%;\r\n}\r\n.filtrationColumns input[type=\"submit\"] {\r\n  display: table;\r\n  margin: auto;\r\n  margin-top: 15px;\r\n}\r\n@media only screen and (max-width: 990px) {\r\n  .filtrovani {\r\n    float: none;\r\n    margin-right: 0;\r\n  }\r\n  .sloupec {\r\n    margin: 0;\r\n    margin-right: 2rem;\r\n    float: left;\r\n  }\r\n  .filtrationColumns {\r\n    display: flex;\r\n    justify-content: space-around;\r\n  }\r\n  .filtraceGroup {\r\n    margin: 0;\r\n    padding: 0;\r\n    padding-left: 1rem;\r\n  }\r\n  .inputContainer {\r\n    margin-top: 25px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}