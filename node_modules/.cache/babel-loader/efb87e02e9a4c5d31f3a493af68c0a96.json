{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport ProductCard from \"../components/ProductCard.vue\";\nimport ThePagination from \"../components/ThePagination.vue\";\nimport TheFiltration from \"../components/TheFiltration.vue\";\nexport default {\n  components: {\n    TheFiltration,\n    ProductCard,\n    ThePagination\n  },\n\n  data() {\n    return {\n      products: [],\n      totalRecords: 0,\n      productsPerPage: 8,\n      filtrationGroups: {\n        tag: {\n          name: \"Tag\",\n          type: \"checkbox\",\n          label: [\"Sleva\", \"Novinka\"],\n          selected: []\n        },\n        categories: {\n          name: \"Kategorie\",\n          type: \"checkbox\",\n          label: [\"Dort\", \"Donut\", \"Muffin\"],\n          selected: []\n        },\n        sort: {\n          name: \"Seřadit od\",\n          type: \"radio\",\n          label: [\"Data přidání\", \"Nejnižší ceny\", \"Nejvyšší ceny\"],\n          selected: []\n        }\n      }\n    };\n  },\n\n  methods: {\n    async loadProducts(page) {\n      try {\n        const searchParams = new URLSearchParams({\n          _limit: this.productsPerPage,\n          _page: page\n        });\n        /*this.filters.tag.content.forEach((element) => {\r\n          searchParams.append(\"tagName\", element);\r\n        });\r\n          this.filters.categories.content.forEach((element) => {\r\n          searchParams.append(\"category\", element);\r\n        });*/\n        // foreach(key, value) key=tag, value = { type:...,apiName:..., conten:...}\n\n        /*Object.entries(this.filters).forEach(([, value]) => {\r\n          value.content.forEach((element) => {\r\n            searchParams.append(value.apiName, element);\r\n          });\r\n        });*/\n\n        const response = await fetch(\"http://localhost:3000/products?\" + searchParams);\n        const data = await response.json();\n        this.products = data;\n        this.totalRecords = response.headers.get(\"X-Total-Count\");\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    updateContent(page) {\n      this.loadProducts(page);\n    },\n\n    updateFilters(vari) {\n      if (!this.filtrationGroups[vari.name].selected.includes(vari.value)) {\n        this.filtrationGroups[vari.name].selected.push(vari.value);\n      } else {\n        this.filtrationGroups[vari.name].selected.pop(vari.value);\n      }\n    }\n\n  },\n\n  mounted() {\n    this.loadProducts(1);\n  }\n\n};","map":{"version":3,"mappings":";AA4BA,OAAOA,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,eAAe;EACbC,UAAU,EAAE;IACVD,aADU;IAEVF,WAFU;IAGVC;EAHU,CADC;;EAMbG,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,CAHZ;MAILC,gBAAgB,EAAE;QAChBC,GAAG,EAAE;UACHC,IAAI,EAAE,KADH;UAEHC,IAAI,EAAE,UAFH;UAGHC,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV,CAHJ;UAIHC,QAAQ,EAAE;QAJP,CADW;QAOhBC,UAAU,EAAE;UACVJ,IAAI,EAAE,WADI;UAEVC,IAAI,EAAE,UAFI;UAGVC,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAHG;UAIVC,QAAQ,EAAE;QAJA,CAPI;QAahBE,IAAI,EAAE;UACJL,IAAI,EAAE,YADF;UAEJC,IAAI,EAAE,OAFF;UAGJC,KAAK,EAAE,CAAC,cAAD,EAAiB,eAAjB,EAAkC,eAAlC,CAHH;UAIJC,QAAQ,EAAE;QAJN;MAbU;IAJb,CAAP;EAyBD,CAhCY;;EAiCbG,OAAO,EAAE;IACP,MAAMC,YAAN,CAAmBC,IAAnB,EAAyB;MACvB,IAAI;QACF,MAAMC,YAAW,GAAI,IAAIC,eAAJ,CAAoB;UACvCC,MAAM,EAAE,KAAKd,eAD0B;UAEvCe,KAAK,EAAEJ;QAFgC,CAApB,CAArB;QAKA;;;;;;QAQA;;QAEA;;;;;;QAMA,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAC1B,oCAAoCL,YADV,CAA5B;QAGA,MAAMf,IAAG,GAAI,MAAMmB,QAAQ,CAACE,IAAT,EAAnB;QACA,KAAKpB,QAAL,GAAgBD,IAAhB;QAEA,KAAKE,YAAL,GAAoBiB,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAqB,eAArB,CAApB;MACF,CA7BA,CA6BE,OAAOC,CAAP,EAAU;QACVC,OAAO,CAACC,KAAR,CAAcF,CAAd;MACF;IACD,CAlCM;;IAmCPG,aAAa,CAACb,IAAD,EAAO;MAClB,KAAKD,YAAL,CAAkBC,IAAlB;IACD,CArCM;;IAsCPc,aAAa,CAACC,IAAD,EAAO;MAClB,IAAI,CAAC,KAAKzB,gBAAL,CAAsByB,IAAI,CAACvB,IAA3B,EAAiCG,QAAjC,CAA0CqB,QAA1C,CAAmDD,IAAI,CAACE,KAAxD,CAAL,EAAqE;QACnE,KAAK3B,gBAAL,CAAsByB,IAAI,CAACvB,IAA3B,EAAiCG,QAAjC,CAA0CuB,IAA1C,CAA+CH,IAAI,CAACE,KAApD;MACF,CAFA,MAEO;QACL,KAAK3B,gBAAL,CAAsByB,IAAI,CAACvB,IAA3B,EAAiCG,QAAjC,CAA0CwB,GAA1C,CAA8CJ,IAAI,CAACE,KAAnD;MACF;IACD;;EA5CM,CAjCI;;EA+EbG,OAAO,GAAG;IACR,KAAKrB,YAAL,CAAkB,CAAlB;EACD;;AAjFY,CAAf","names":["ProductCard","ThePagination","TheFiltration","components","data","products","totalRecords","productsPerPage","filtrationGroups","tag","name","type","label","selected","categories","sort","methods","loadProducts","page","searchParams","URLSearchParams","_limit","_page","response","fetch","json","headers","get","e","console","error","updateContent","updateFilters","vari","includes","value","push","pop","mounted"],"sourceRoot":"","sources":["D:\\OneDrive\\IdeaProjects\\app\\src\\views\\StorePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <section>\r\n      <TheFiltration\r\n        :filtrationGroups=\"filtrationGroups\"\r\n        @filtersChanged=\"updateFilters\"\r\n      />\r\n    </section>\r\n\r\n    <section class=\"row productSection\">\r\n      <h2>Nabídka vybraných produktů</h2>\r\n      {{ filtrationGroups }}\r\n      <ProductCard\r\n        v-for=\"product in products\"\r\n        :key=\"product.id\"\r\n        :product=\"product\"\r\n      />\r\n    </section>\r\n\r\n    <ThePagination\r\n      :totalRecords=\"totalRecords\"\r\n      :perPage=\"productsPerPage\"\r\n      @pageChanged=\"updateContent\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductCard from \"../components/ProductCard.vue\";\r\nimport ThePagination from \"../components/ThePagination.vue\";\r\nimport TheFiltration from \"../components/TheFiltration.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TheFiltration,\r\n    ProductCard,\r\n    ThePagination,\r\n  },\r\n  data() {\r\n    return {\r\n      products: [],\r\n      totalRecords: 0,\r\n      productsPerPage: 8,\r\n      filtrationGroups: {\r\n        tag: {\r\n          name: \"Tag\",\r\n          type: \"checkbox\",\r\n          label: [\"Sleva\", \"Novinka\"],\r\n          selected: [],\r\n        },\r\n        categories: {\r\n          name: \"Kategorie\",\r\n          type: \"checkbox\",\r\n          label: [\"Dort\", \"Donut\", \"Muffin\"],\r\n          selected: [],\r\n        },\r\n        sort: {\r\n          name: \"Seřadit od\",\r\n          type: \"radio\",\r\n          label: [\"Data přidání\", \"Nejnižší ceny\", \"Nejvyšší ceny\"],\r\n          selected: [],\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async loadProducts(page) {\r\n      try {\r\n        const searchParams = new URLSearchParams({\r\n          _limit: this.productsPerPage,\r\n          _page: page,\r\n        });\r\n\r\n        /*this.filters.tag.content.forEach((element) => {\r\n          searchParams.append(\"tagName\", element);\r\n        });\r\n\r\n        this.filters.categories.content.forEach((element) => {\r\n          searchParams.append(\"category\", element);\r\n        });*/\r\n\r\n        // foreach(key, value) key=tag, value = { type:...,apiName:..., conten:...}\r\n\r\n        /*Object.entries(this.filters).forEach(([, value]) => {\r\n          value.content.forEach((element) => {\r\n            searchParams.append(value.apiName, element);\r\n          });\r\n        });*/\r\n\r\n        const response = await fetch(\r\n          \"http://localhost:3000/products?\" + searchParams\r\n        );\r\n        const data = await response.json();\r\n        this.products = data;\r\n\r\n        this.totalRecords = response.headers.get(\"X-Total-Count\");\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n    updateContent(page) {\r\n      this.loadProducts(page);\r\n    },\r\n    updateFilters(vari) {\r\n      if (!this.filtrationGroups[vari.name].selected.includes(vari.value)) {\r\n        this.filtrationGroups[vari.name].selected.push(vari.value);\r\n      } else {\r\n        this.filtrationGroups[vari.name].selected.pop(vari.value);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadProducts(1);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.productSection h2 {\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n}\r\n.productSection {\r\n  min-height: 500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}