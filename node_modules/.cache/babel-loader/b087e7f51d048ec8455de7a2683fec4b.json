{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row productSection\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Nabídka vybraných produktů\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TheFiltration = _resolveComponent(\"TheFiltration\");\n\n  const _component_ProductCard = _resolveComponent(\"ProductCard\");\n\n  const _component_ThePagination = _resolveComponent(\"ThePagination\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"section\", null, [_createVNode(_component_TheFiltration)]), _createElementVNode(\"section\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createBlock(_component_ProductCard, {\n      key: product.id,\n      product: product\n    }, null, 8\n    /* PROPS */\n    , [\"product\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createVNode(_component_ThePagination, {\n    totalRecords: $data.totalRecords,\n    perPage: $data.productsPerPage,\n    onPageChanged: $options.updateContent\n  }, null, 8\n  /* PROPS */\n  , [\"totalRecords\", \"perPage\", \"onPageChanged\"])]);\n}","map":{"version":3,"mappings":";;EAMaA,KAAK,EAAC;;;gCACbC,oBAAmC,IAAnC,EAAmC,IAAnC,EAAI,4BAAJ,EAA8B;AAAA;AAA9B;;;;;;;;;uBANJC,oBAmBM,KAnBN,EAmBM,IAnBN,EAmBM,CAlBJD,oBAEU,SAFV,EAEU,IAFV,EAEU,CADRE,aAAgBC,wBAAhB,CACQ,CAFV,CAkBI,EAdJH,oBAOU,SAPV,cAOU,CANRI,UAMQ,qBALRH,oBAIEI,SAJF,EAIE,IAJF,EAIEC,YAHkBC,cAGlB,EAHOC,OAAmB,IAAZ;yBADhBC,aAIEC,sBAJF,EAIE;MAFCC,GAAG,EAAEH,OAAO,CAACI,EAEd;MADCJ,OAAO,EAAEA;IACV,CAJF;;IAAA;GAIE,CAJF;;EAAA,CAKQ,EAPV,CAcI,EALJN,aAIEW,wBAJF,EAIE;IAHCC,YAAY,EAAEP,kBAGf;IAFCQ,OAAO,EAAER,qBAEV;IADCS,aAAW,EAAEC;EACd,CAJF;;EAAA,+CAKI,CAnBN","names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_TheFiltration","_hoisted_2","_Fragment","_renderList","$data","product","_createBlock","_component_ProductCard","key","id","_component_ThePagination","totalRecords","perPage","onPageChanged","$options"],"sourceRoot":"","sources":["D:\\OneDrive\\IdeaProjects\\app\\src\\views\\StorePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <section>\r\n      <TheFiltration/>\r\n    </section>\r\n\r\n    <section class=\"row productSection\">\r\n      <h2>Nabídka vybraných produktů</h2>\r\n      <ProductCard\r\n        v-for=\"product in products\"\r\n        :key=\"product.id\"\r\n        :product=\"product\"\r\n      />\r\n    </section>\r\n\r\n    <ThePagination\r\n      :totalRecords=\"totalRecords\"\r\n      :perPage=\"productsPerPage\"\r\n      @pageChanged=\"updateContent\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductCard from \"../components/ProductCard.vue\";\r\nimport ThePagination from \"../components/ThePagination.vue\";\r\nimport TheFiltration from \"../components/TheFiltration.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TheFiltration,\r\n    ProductCard,\r\n    ThePagination,\r\n  },\r\n  data() {\r\n    return {\r\n      products: [],\r\n      totalRecords: 0,\r\n      productsPerPage: 8,\r\n      filtration:{\r\n        Tag: {\r\n          type: 'checkbox',\r\n          content: ['Sleva','Novinka']\r\n        },\r\n        Kategorie: {\r\n          type: 'checkbox',\r\n          content: ['Sleva','Novinka']\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async loadProducts(page) {\r\n      try {\r\n        const searchParams = new URLSearchParams({\r\n          _limit: this.productsPerPage,\r\n          _page: page,\r\n        });\r\n\r\n        /*this.filters.tag.content.forEach((element) => {\r\n          searchParams.append(\"tagName\", element);\r\n        });\r\n\r\n        this.filters.categories.content.forEach((element) => {\r\n          searchParams.append(\"category\", element);\r\n        });*/\r\n\r\n        // foreach(key, value) key=tag, value = { type:...,apiName:..., conten:...}\r\n        \r\n        \r\n        /*Object.entries(this.filters).forEach(([, value]) => {\r\n          value.content.forEach((element) => {\r\n            searchParams.append(value.apiName, element);\r\n          });\r\n        });*/\r\n\r\n        const response = await fetch(\r\n          \"http://localhost:3000/products?\" + searchParams);\r\n        const data = await response.json();\r\n        this.products = data;\r\n\r\n        this.totalRecords = response.headers.get(\"X-Total-Count\");\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n    updateContent(page) {\r\n      this.loadProducts(page);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadProducts(1);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.productSection h2 {\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n}\r\n.productSection {\r\n  min-height: 500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}